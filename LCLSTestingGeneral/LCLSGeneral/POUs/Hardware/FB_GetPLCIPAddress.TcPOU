<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_GetPLCIPAddress" Id="{3dc87598-d3fd-46d3-b621-8ecdb5e5ec58}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_GetPLCIPAddress
VAR_INPUT
    bEnable			: BOOL;
    tRetryDelay		: TIME := T#10s;
END_VAR
VAR_OUTPUT
    sIPAddress		: STRING(15);

    bDone 			: BOOL;
    bError			: BOOL;
END_VAR
VAR
    fbGetAdapterIP 	: FB_GetAdaptersInfo := (bExecute := TRUE, sNetID := ''); // Acquire IP of the correct adapter

    iIndex			: UDINT;

    tRetry 			: TON;
    bReset			: BOOL;
    bInitialized	: BOOL := FALSE;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bEnable THEN
    IF NOT bInitialized OR (tRetry.Q AND NOT bDone) THEN
        bReset			:= TRUE;
        bInitialized	:= TRUE;
        fbGetAdapterIP(bExecute:=FALSE);
    END_IF

    tRetry(IN:=bReset, PT:=tRetryDelay);
    bReset := FALSE;

    IF NOT bDone THEN
        fbGetAdapterIP(bExecute:=TRUE, bError=>bError);
        IF NOT (fbGetAdapterIP.bBusy or fbGetAdapterIP.bError) THEN
            FOR iIndex := 0 TO MAX_LOCAL_ADAPTERS DO
                IF FIND(fbGetAdapterIP.arrAdapters[iIndex].sIpAddr, GVL_Logger.sIpTidbit) <> 0 THEN
                    sIPAddress := fbGetAdapterIP.arrAdapters[iIndex].sIpAddr;
                    bDone := TRUE;
                    EXIT;
                END_IF
            END_FOR
        END_IF
    END_IF

END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>
